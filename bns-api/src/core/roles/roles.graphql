type Query {
  roles: [Role]
  role(id: Int!): Role
  roleTiers: [RoleTiers]
  permissions: [Permission]
  permissionGroups: [PermissionGroup]
}

type Mutation {
  upsertRole(upsertRoleInput: UpsertRoleInput): Role
} 

type Subscription {
  roleUpdated: Role
}

input UpsertRoleInput {
  id: Int
  name: String!
  hierarchyTier: Int!

  rolePermissions: [RolePermissionInput]
}

input RolePermissionInput {
  permissionId: Int!
}

type Role {
  id: Int!
  name: String!
  hierarchyTier: Int!

  rolePermissions: [RolePermission]
}

type RolePermission {
  roleId: Int!
  permissionId: Int!

  permission: Permission!
  role: Role!
}

type PermissionGroup {
  id: Int!
  name: String!

  permissions: [Permission]
}

type Permission {
  id: Int!
  name: PermissionName!

  rolePermissions: [RolePermission]
}

type RoleTiers {
  tierNumber: Int!
}

# Using an enum for standard permission names (this will be static data that won't change)
enum PermissionName {
  APPLICATION_LOGIN # 1
  INVENTORY  # 2
  INVENTORY_ADJUSTMENTS  # 3
  INVENTORY_COUNTS  # 4
  PRICING  # 5
  PROMOTIONS  # 6
  REPORTS  # 7
  REPORTS_INVENTORY  # 8
  REPORTS_PRICING  # 9
  REPORTS_PROMOTIONS  # 10
  SETTINGS # 11
  EDIT_USER # 12
  CREATE_USER # 13
  EDIT_ROLE # 14
  CREATE_ROLE # 15
  EDIT_ITEM # 16
  CREATE_ITEM # 17
  EDIT_VENDOR  # 18
  CREATE_VENDOR # 19
  EDIT_CATEGORY #20
  CREATE_CATEGORY #21
}