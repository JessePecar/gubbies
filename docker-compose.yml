# version: '3.5'
services:

  # region DBs

  db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    restart: unless-stopped
    environment:
      - ACCEPT_EULA=Y 
      - MSSQL_SA_PASSWORD=J92P1Y0j4T # This is temporary and will be managed differently in the future
    container_name: bns-db
    volumes:
      - bnsdata:/var/lib/postgresql/data
    ports:
      - "1401:1433"

  # endregion

  # region APIs

  bns-api:
    container_name: bns-api
    environment:
      - PORT=3000
    build:
      context: apis
      dockerfile: bns.Dockerfile
    ports:
      - "3000:3000"
    depends_on: 
      - db
    expose: 
      - "80"    

  ar-api: 
    container_name: ar-api
    environment:
      - PORT=3001
    build:
      context: apis
      dockerfile: ar.Dockerfile
    ports:
      - "3001:3001"
    links: 
      - db
    expose: 
      - "80"   

  auth-api: 
    container_name: auth-api
    environment:
      - PORT=3002
      - REDIS_HOST=auth-cache
      - REDIS_PORT=6379
      - REDIS_PASSWORD=eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    build:
      context: apis
      dockerfile: auth.Dockerfile
    ports:
      - "3002:3002"
    depends_on: 
      - db
      - auth-cache
    expose: 
      - "80" 

  pos-api: 
    container_name: pos-api
    environment:
      - PORT=3003
    build:
      context: apis
      dockerfile: pos.Dockerfile
    ports:
      - "3003:3003"
    links: 
      - db
    expose: 
      - "80"   

  # endregion

  # region UIs
  
  bns-ui:
    container_name: bns-ui
    build:
      context: webapps
      dockerfile: bns.Dockerfile
    ports:
      - "4200:4200"
    depends_on:
      - bns-api
      - auth-api

  portal-ui:
    container_name: portal-ui
    build:
      context: webapps
      dockerfile: portal.Dockerfile
    ports:
      - "4201:4201"
    links:
      - auth-api  

  # endregion

  # region Utilities

  bns-mq:
    container_name: bns-mq
    image: rabbitmq:3
    restart: unless-stopped

  auth-cache:
    container_name: auth-cache
    image: redis:latest
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes:
      - cache:/data

  # endregion  
  
volumes: 
  bnsdata:
    external: true
  cache:
    driver: local