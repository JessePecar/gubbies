type Query {
  users: [User]
  user(id: ID!): User
}

type Mutation {
  createUser(createUserInput: CreateUserInput): User
  updateUser(updateUserInput: UpdateUserInput): User
  createRole(createRoleInput: CreateRoleInput): Role
} 

type Subscription {
  usersChanged: User
}

input CreateRoleInput {
  name: String!

  rolePermissions: [CreateRolePermission]
}

input CreateRolePermission {
  permissionId: Int!
}

input CreateUserInput {
  firstName: String
  lastName: String
  roleId: Int!
  userName: String!
  isActive: Boolean
  emailAddress: String

  primaryPhone: UpdatePhoneInput

  address: UpdateAddressInput
  password: String
}

input UpdateUserInput {
  id: Int!
  firstName: String
  lastName: String
  roleId: Int!
  userName: String!
  isActive: Boolean
  emailAddress: String

  primaryPhoneId: Int
  primaryPhone: UpdatePhoneInput

  addressId: Int
  address: UpdateAddressInput
}

input UpdatePhoneInput {
  id: Int!

  rawDigits: String!
  nationalDigits: String!
}

input UpdateAddressInput {
  id: Int!

  address1: String!
  address2: String
  state: String!
  city: String!
  countryCode: String!
  postalCode: Int!
}

type User {
  id: Int!
  firstName: String
  lastName: String
  roleId: Int!
  primaryPhoneId: Int
  addressId: Int
  userName: String!
  isActive: Boolean
  emailAddress: String

  role: Role!
  primaryPhone: Phone
  address: Address
}


# Using an enum for standard permission names (this will be static data that won't change)
enum PermissionName {
  APPLICATION_LOGIN # 1
  INVENTORY  # 2
  INVENTORY_ADJUSTMENTS  # 3
  INVENTORY_COUNTS  # 4
  PRICING  # 5
  PROMOTIONS  # 6
  REPORTS  # 7
  REPORTS_INVENTORY  # 8
  REPORTS_PRICING  # 9
  REPORTS_PROMOTIONS  # 10
  SETTINGS # 11
  EDIT_USER # 12
  CREATE_USER # 13
  EDIT_ROLE # 14
  CREATE_ROLE # 15
  EDIT_ITEM # 16
  CREATE_ITEM # 17
}

type Phone {
  id: Int!
  rawDigits: String
  nationalDigits: String

  users: [User]
}

type Address {
  id: Int!
  address1: String!
  address2: String
  state: String!
  city: String!
  countryCode: String!
  postalCode: Int!

  user: User
}