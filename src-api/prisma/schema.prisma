generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model AdjustmentItems {
  adjustmentId Int
  itemId       Int

  adjustment Adjustments @relation(fields: [adjustmentId], references: [id])
  item       Items       @relation(fields: [itemId], references: [id])

  @@id([adjustmentId, itemId])
}

model Adjustments {
  id           Int       @id @default(autoincrement())
  createDate   DateTime?
  status       Int
  completeDate DateTime?

  adjustmentItems AdjustmentItems[]
}

model Categories {
  code  String  @id
  name  String?
  items Items[]
}

model Items {
  id                    Int     @id @default(autoincrement())
  name                  String
  categoryCode          String
  quantityOnHand        String
  basePrice             Decimal
  currentPrice          Decimal
  isActive              Boolean
  retirementStatus      Int
  reorderQuantity       Decimal
  unitOfMeasurementType Int

  adjustmentItems AdjustmentItems[]
  category        Categories        @relation(fields: [categoryCode], references: [code])
}

model Permissions {
  id              Int               @id @default(autoincrement())
  name            String?
  rolePermissions RolePermissions[]
}

model Roles {
  id              Int               @id @default(autoincrement())
  name            String
  rolePermissions RolePermissions[]
  users           Users[]
}

model RolePermissions {
  roleId       Int
  role         Roles       @relation(fields: [roleId], references: [id])
  permissionId Int
  permission   Permissions @relation(fields: [permissionId], references: [id])

  @@id([roleId, permissionId])
}

model SequelizeMeta {
  name String @id

  @@ignore
}

model Users {
  id        Int     @id @default(autoincrement())
  firstName String?
  lastName  String?
  roleId    Int
  role      Roles   @relation(fields: [roleId], references: [id])
  userName  String?
  password  String?
}
